DROP DATABASE IF EXISTS TeaFactory;
CREATE DATABASE IF NOT EXISTS TeaFactory;
SHOW DATABASES;
USE TeaFactory;

CREATE TABLE IF NOT EXISTS Customer(
	customerId VARCHAR(20) NOT NULL,
	customerName VARCHAR(40),
	contact VARCHAR(15),
	CONSTRAINT PRIMARY KEY(customerId)
);
DESC Customer;

INSERT INTO Customer VALUES('C002','Kamal','076458392');
INSERT INTO Customer VALUES('C003','Vimal','078764758');
INSERT INTO Customer VALUES('C004','Namal','072349372');

CREATE TABLE IF NOT EXISTS Orders(
	orderId VARCHAR(20) NOT NULL,
	orderDate DATE,
	customerId VARCHAR(20) NOT NULL,
	CONSTRAINT PRIMARY KEY(orderId),
	CONSTRAINT FOREIGN KEY(customerId) REFERENCES Customer(customerId)
	ON DELETE CASCADE ON UPDATE CASCADE
);
DESC Orders;

CREATE TABLE IF NOT EXISTS Product(
	productCode VARCHAR(20) NOT NULL,
	description VARCHAR(40),
	unitPrice DECIMAL(8,2),
	CONSTRAINT PRIMARY KEY(productCode)
);
DESC Product;

CREATE TABLE IF NOT EXISTS Payment(
	paymentId VARCHAR(20) NOT NULL,
	totalPrice DECIMAL(8,2),
	CONSTRAINT PRIMARY KEY(paymentId)
);
DESC Payment;

CREATE TABLE IF NOT EXISTS OrderDetail(
	orderId VARCHAR(20) NOT NULL,
	productCode VARCHAR(20) NOT NULL,
	paymentId VARCHAR(20) NOT NULL,
	qauntity INT(10),
	sellingPrice DECIMAL(8,2),
	CONSTRAINT PRIMARY KEY(orderId,productCode),
	CONSTRAINT FOREIGN KEY(orderId) REFERENCES Orders(orderId)
	ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FOREIGN KEY(productCode) REFERENCES Product(productCode)
	ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FOREIGN KEY(paymentId) REFERENCES Payment(paymentId)
	ON DELETE CASCADE ON UPDATE CASCADE
);
DESC OrderDetail;

CREATE TABLE IF NOT EXISTS Section(
	sectionCode VARCHAR(20) NOT NULL,
	sectionName VARCHAR(40),
	productCode VARCHAR(20) NOT NULL,
	CONSTRAINT PRIMARY KEY(sectionCode),
	CONSTRAINT FOREIGN KEY(productCode) REFERENCES Product(productCode)
	ON DELETE CASCADE ON UPDATE CASCADE
);
DESC Section;

INSERT INTO Section VALUES('S001','Selling','P001');

CREATE TABLE IF NOT EXISTS User(
	jobRole VARCHAR(30) NOT NULL,
	userName VARCHAR(30),
	password VARCHAR(20),
	sectionCode VARCHAR(20) NOT NULL,
	CONSTRAINT PRIMARY KEY(jobRole),
	CONSTRAINT FOREIGN KEY(sectionCode) REFERENCES Section(sectionCode)
	ON DELETE CASCADE ON UPDATE CASCADE
);
DESC User;

INSERT INTO User VALUES('Manager','Admin','Admin1234','S001');


CREATE TABLE IF NOT EXISTS Employee(
	employeeId VARCHAR(20) NOT NULL,
	employeeName VARCHAR(40),
	employeeAddress VARCHAR(40),
	jobRole VARCHAR(30) NOT NULL,
	CONSTRAINT PRIMARY KEY(employeeId),
	CONSTRAINT FOREIGN KEY(jobRole) REFERENCES User(jobRole)
	ON DELETE CASCADE ON UPDATE CASCADE
);
DESC Employee;

INSERT INTO Employee VALUES('E001','Kamal','Galle','Manager');

CREATE TABLE IF NOT EXISTS Stock(
	stockId VARCHAR(20) NOT NULL,
	stockName VARCHAR(30),
	sectionCode VARCHAR(20) NOT NULL,
	CONSTRAINT PRIMARY KEY(stockId),
	CONSTRAINT FOREIGN KEY(sectionCode) REFERENCES Section(sectionCode)
	ON DELETE CASCADE ON UPDATE CASCADE
);
DESC Stock;

INSERT INTO Stock VALUES('St001','TeaPowder','S001');

CREATE TABLE IF NOT EXISTS Supplier(
	supplierId VARCHAR(20) NOT NULL,
	supplierName VARCHAR(40),
	description VARCHAR(40),
	Qauntity INT(10),
	CONSTRAINT PRIMARY KEY(supplierId)
);
DESC Supplier;

CREATE TABLE IF NOT EXISTS SupplierOrder(
	supplierOrderId VARCHAR(20) NOT NULL,
	description VARCHAR(40),
	supOrderDate DATE,
	supplierId VARCHAR(20) NOT NULL,
	CONSTRAINT PRIMARY KEY(supplierOrderId),
	CONSTRAINT FOREIGN KEY(supplierId) REFERENCES Supplier(supplierId)
	ON DELETE CASCADE ON UPDATE CASCADE
);
DESC SupplierOrder;

CREATE TABLE IF NOT EXISTS BillPayment(
	billPaymentId VARCHAR(20) NOT NULL,
	totalPrice DECIMAL(8,2),
	CONSTRAINT PRIMARY KEY(billPaymentId)
);
DESC BillPayment;

CREATE TABLE IF NOT EXISTS SupplierOrderDetail(
	sellingPrice DECIMAL(8,2),
	qauntity INT(10),
	supplierOrderId VARCHAR(20) NOT NULL,
	stockId VARCHAR(20) NOT NULL,
	billPaymentId VARCHAR(20) NOT NULL,
	CONSTRAINT PRIMARY KEY(supplierOrderId,stockId),
	CONSTRAINT FOREIGN KEY(supplierOrderId) REFERENCES SupplierOrder(supplierOrderId)
	ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FOREIGN KEY(stockId) REFERENCES Stock(stockId)
	ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FOREIGN KEY(billPaymentId) REFERENCES BillPayment(billPaymentId)
	ON DELETE CASCADE ON UPDATE CASCADE
);
DESC SupplierOrderDetail;

